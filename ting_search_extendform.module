<?php

/**
 * @file
 * Implements an extended search form with fields for librarians.
 *
 * Adds several input fields to search in specific indexes.
 */

function ting_search_extendform_form_ting_admin_register_settings_alter(&$form, &$form_state, $form_id) {
  $form['ting_search_extendform_creator_index'] = array(
    '#type' => 'textfield',
    '#title' => t('Author'),
    '#description' => t('Field that contains authername, for instance dc.creator'),
    '#default_value' => variable_get('ting_search_extendform_creator_index', 'dc.creator'),
  );

  $form['ting_search_extendform_title_index'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#description' => t('Field that contains title, for instance dc.title'),
    '#default_value' => variable_get('ting_search_extendform_title_index', 'dc.title'),
  );

  $form['ting_search_extendform_subject_index'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#description' => t('Field that contains subject, for instance dc.subject'),
    '#default_value' => variable_get('ting_search_extendform_subject_index', 'dc.subject'),
  );

  $form['#validate'][] = 'ting_search_extendform_admin_register_settings_validate';
  $form['#submit'][] = 'ting_search_extendform_admin_register_settings_submit';

  return $form;
}

function ting_search_extendform_admin_register_settings_validate($form, &$form_state) {
  $s = '';
  if (isset($form_state['values']['ting_search_extendform_creator_index'])) {
    $s = $form_state['values']['ting_search_extendform_creator_index'];
  }
  if ($s == '') {
    form_set_error('ting_search_extendform_creator_index', t('Please enter a register to use with creator.'));
  }

  $s = '';
  if (isset($form_state['values']['ting_search_extendform_title_index'])) {
    $s = $form_state['values']['ting_search_extendform_title_index'];
  }
  if ($s == '') {
    form_set_error('ting_search_extendform_title_index', t('Please enter a register to use with title.'));
  }

  $s = '';
  if (isset($form_state['values']['ting_search_extendform_subject_index'])) {
    $s = $form_state['values']['ting_search_extendform_subject_index'];
  }
  if ($s == '') {
    form_set_error('ting_search_extendform_subject_index', t('Please enter a register to use with subjects.'));
  }
}

function ting_search_extendform_admin_register_settings_submit($form, $form_state) {
  variable_set('ting_search_extendform_creator_index', $form_state['values']['ting_search_extendform_creator_index']);
  variable_set('ting_search_extendform_title_index', $form_state['values']['ting_search_extendform_title_index']);
  variable_set('ting_search_extendform_subject_index', $form_state['values']['ting_search_extendform_subject_index']);
}

function ting_search_extendform_form_search_form_alter(&$form, &$form_state, $form_id) {
  unset($form['basic']);
  unset($form['advanced']);
  return $form;
}

/**
 * @brief Implementation of hook_form_FORM_ID_alter() for form search_block_form.
 */
function ting_search_extendform_form_search_block_form_alter(&$form, &$form_state, $form_id) {
  $search_path = arg(1);
  $values = ting_search_extendform_form_values();

  if (arg(0) == 'search' && !empty($search_path)) {
    $default_value = trim(arg(2));
  }
  else {
    $default_value = '';
  }
  $default_value = isset($_GET['text']) ? $_GET['text'] : $default_value;

  $form['search_block_form']['#default_value'] = $values['search'];

  $options = array();
  $default = variable_get('search_default_module', 'node');

  $search_providers = search_get_info(TRUE);
  $active_providers = variable_get('search_active_modules', array());
  foreach ($search_providers as $provider_name => $provider_info) {
    if (!empty($active_providers[$provider_name])) {
      $options[$provider_info['path']] = t('@title', array('@title' => $provider_info['title']));
      if ($provider_name == $default) {
        $default = $provider_info['path'];
      }
    }
  }

  // Change value "Content" to "Website"
  if (!empty($options['node'])) {
    $options['node'] = t('Website');
  }

  // Change the order of options.
  $search_providers_order = array('ting', 'node', 'meta');
  // Add any other providers not listed to the end.
  $search_providers_order = array_merge($search_providers_order, array_keys($options));
  $new_order = array();
  foreach ($search_providers_order as $provider) {
    if (isset($options[$provider])) {
      $new_order[$provider] = $options[$provider];
    }
  }
  $options = $new_order;

  // Check if we are on a search page
  if (arg(0) == 'search' && !empty($search_path)) {
    $default = $search_path;
  }

  $form['search_provider'] = array(
    '#type' => 'radios',
    '#options' => $options,
    '#default_value' => $default,
  );

  $form['advanced_search'] = array(
    '#type' => 'fieldset',
    '#title' => t('Advanced'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#attributes' => array('class' => array('extendsearch-advanced')),
    '#prefix' => '<br />',
  );

  $form['advanced_search']['fields'] = array(
    '#prefix' => '<div class="fields">',
    '#suffix' => '</div>',
  );

  $defvalue = empty($values['dc.creator']) ? '' : $values['dc.creator'];
  $form['advanced_search']['fields']['ting_search_extendform_creator_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Author'),
    '#default_value' => $defvalue,
    '#size' => 50,
    '#maxlength' => 255,
  );

  if ($defvalue != '') {
    $form['advanced_search']['#collapsed'] = FALSE;
  }

  $defvalue = empty($values['dc.title']) ? '' : $values['dc.title'];
  $form['advanced_search']['fields']['ting_search_extendform_title_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#default_value' => $defvalue,
    '#prefix' => '<br />',
    '#size' => 50,
    '#maxlength' => 255,
  );

  if ($defvalue != '') {
    $form['advanced_search']['#collapsed'] = FALSE;
  }

  $defvalue = empty($values['dc.subject']) ? '' : $values['dc.subject'];
  $form['advanced_search']['fields']['ting_search_extendform_subject_field'] = array(
    '#type' => 'textfield',
    '#title' => t('Subjects'),
    '#default_value' => $defvalue,
    '#prefix' => '<br />',
    '#size' => 50,
    '#maxlength' => 255,
  );

  if ($defvalue != '') {
    $form['advanced_search']['#collapsed'] = FALSE;
  }

  $form['#submit'] = array('ting_search_extendform_submit');

  return $form;
}

/**
 * Process a block search form submission.
 */
function ting_search_extendform_submit($form, &$form_state) {
  // The search form relies on control of the redirect destination for its
  // functionality, so we override any static destination set in the request,
  // for example by drupal_access_denied() or drupal_not_found()
  // (see http://drupal.org/node/292565).
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  $form_id = $form['form_id']['#value'];
  $terms = $form_state['values'][$form_id];
  $fields = array();
  $values = array();

  $s = $form_state['values']['ting_search_extendform_creator_field'];
  if (!empty($s)) {
    $key = variable_get('ting_search_extendform_creator_index', 'dc.creator');
    $fields[] = sprintf('%s=%s', $key, $s);
    $values[$key] = $s;
  }

  $s = $form_state['values']['ting_search_extendform_title_field'];
  if (!empty($s)) {
    $key = variable_get('ting_search_extendform_title_index', 'dc.title');
    $fields[] = sprintf('%s=%s', $key, $s);
    $values[$key] = $s;
  }

  $s = $form_state['values']['ting_search_extendform_subject_field'];
  if (!empty($s)) {
    $key = variable_get('ting_search_extendform_subject_index', 'dc.subject');
    $fields[] = sprintf('%s=%s', $key, $s);
    $values[$key] = $s;
  }

  $q = implode(' AND ', $fields);
  if ($q == '') {
    $q = $terms;
  }
  elseif ($terms != '') {
    $q = sprintf('%s AND %s', $terms, $q);
  }

  // Check to see if the form was submitted empty.
  // If it is empty, display an error message.
  // (This method is used instead of setting #required to TRUE for this field
  // because that results in a confusing error message.  It would say a plain
  // "field is required" because the search keywords field has no title.
  // The error message would also complain about a missing #title field.)
  if ($q == '') {
    form_set_error('keys', t('Please enter some keywords.'));
  }

  $path = $form_state['values']['search_provider'];
  if (!empty($path)) {
    $url = 'search/' . $path . '/' . trim($q);
    $form_state['redirect'] = array($url, array('query' => $values));
  }
  else {
    form_set_error(NULL, t('Search is currently disabled.'), 'error');
  }
}

/**
 * Get form values from URL.
 *
 * @return array
 *   Form values.
 */
function ting_search_extendform_form_values() {
  $values = array(
    'search' => '',
  );

  // Return empty search string.
  if (arg(0) != 'search') {
    return $values;
  }
  $query = arg(2);

  // Return all query as search string.
  if (empty($_GET)) {
    $values['search'] = $query;
    return $values;
  }

  // Remove form values from search string and fill form.
  foreach ($_GET as $key => $value) {
    $key = str_replace('_', '.', $key);
    $query = str_replace("$key=$value", '', $query);
    $values[$key] = $value;
  }

  // Clean up search string.
  $query = explode(' AND ', $query);
  $strings = array();
  foreach ($query as $q) {
    $q = trim($q);
    if (!empty($q)) {
      $strings[] = $q;
    }
  }

  $query = implode(' AND ', $strings);
  $values['search'] = $query;
  return $values;
}
